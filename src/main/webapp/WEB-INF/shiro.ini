[main]

dataSource = org.postgresql.ds.PGPoolingDataSource
dataSource.serverName = ec2-52-203-164-61.compute-1.amazonaws.com
dataSource.databaseName = d9i25egfqjjlhc
dataSource.portNumber = 5432
dataSource.ssl = true
dataSource.sslmode = allow
dataSource.sslfactory = org.postgresql.ssl.NonValidatingFactory
dataSource.user = tvttrtrvaoshvb
dataSource.password = bf0b9ee61d67585d19b063ef3c268c044b59a780a2c42a7600b966af9201aa82

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource
jdbcRealm.authenticationQuery = SELECT userpassword FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT name FROM rol WHERE id = (SELECT usertype FROM users WHERE username = ?)

authc.loginUrl = /faces/signin.xhtml

passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.hashIterations=1
credentialsMatcher.storedCredentialsHexEncoded = true

onlynot=edu.eci.cvds.security.OnlyNot
onlynot.welcomeurl=/faces/index.html
anyrole = edu.eci.cvds.security.AnyRole

[urls]
/faces/homeA.xhtml = authc, anyrole["Administrator,Usuario"]
/faces/categories.xhtml = authc, anyrole["Administrator,Usuario"]
/faces/categories2.xhtml = authc, anyrole["Administrator,Usuario"]
/faces/homeB.xhtml = anyrole["Usuario"]

/=onlynot
/faces/signin.xhtml=onlynot